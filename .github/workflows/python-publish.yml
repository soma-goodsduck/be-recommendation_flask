# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# Actions 작업명
name: Deploy Flask to Amazon EC2
env:
  PROJECT_NAME: be-recommendation_flask


# 이벤트 바인딩 : master 브랜치에 push 이벤트 발생 시 실행
on:
  push:
    branches: 
      - main

# 이벤트가 발생시 해당 작업들 실행
jobs:
  # 작업 분류 : 배포 (빌드와 배포를 분류 가능)
  deploy:
    # 작업 명
    name: DEPLOY_FOR_DEVELOP
    runs-on: ubuntu-18.04

    # 위 작업의 세부 단계 설정
    steps:
    # 사용할 actioms의 가상머신
    - uses: actions/checkout@v2
    
    # 스탭 명
    - name: Set up Python
    # python 가상머신 사용 - 부정확함 
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
      
    # # 파이썬 유닛테스트 스텝
    # - name: run unittest
    #   # run 명령어로 위 가상머신에서 작업 수행함
    #   run: |
    #     pwd \
    #     cd ./test/ \
    #     python -m unittest ./test/test.py \
    #     cd ..\
    #     pwd \
    
#     # 폴더 만드는 스탭
#     - name: make artifacts dir
#       run: mkdir ./artifacts/

#     # 소스 파일 압축
#     - name: zip artifacts
#       run: zip -r ./artifacts/$GITHUB_SHA.zip . -i ./app/* appspec.yml

    - name: Make zip file
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash
    
#     # AWS S3에 압축파일을 전달하는 설정 및 명령어
#     - name: deploy to s3
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --acl public-read --follow-symlinks --delete
#       env:
#         AWS_S3_BUCKET: backendgoodsduckdevelop
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEPLOY_DEVELOP_IAM_KEY }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEPLOY_DEVELOP_IAM_SECRET }}
#         AWS_REGION: ${{ secrets.AWS_REGION }}
# #         SOURCE_DIR: './artifacts'
#         DEST_DIR: '$PROJECT_NAME/'
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_DEPLOY_DEVELOP_IAM_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_DEPLOY_DEVELOP_IAM_SECRET }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://backendgoodsduckdevelop/$PROJECT_NAME/$GITHUB_SHA.zip
  
    - name: Code Deploy
      run: aws deploy create-deployment --application-name be-recommendation_flask --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name be-recommendation_flask --s3-location bucket=backendgoodsduckdevelop,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
      
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r /opt/$PROJECT_NAME/requirement.txt
        
